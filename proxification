# create new chain
iptables -t nat -N PROXY
iptables -t nat -I OUTPUT -j PROXY

# exclude local traffic, see: http://manpages.org/ss-redir
iptables -t nat -A PROXY -d 127.0.0.0/8 -j RETURN
iptables -t nat -A PROXY -d 192.168.0.0/16 -j RETURN
iptables -t nat -A PROXY -d 0.0.0.0/8 -j RETURN
iptables -t nat -A PROXY -d 10.0.0.0/8 -j RETURN
iptables -t nat -A PROXY -d 169.254.0.0/16 -j RETURN
iptables -t nat -A PROXY -d 172.16.0.0/12 -j RETURN
iptables -t nat -A PROXY -d 224.0.0.0/4 -j RETURN
iptables -t nat -A PROXY  -d 240.0.0.0/4 -j RETURN


# socksify whole TCP traffic
iptables -t nat -A PROXY -p tcp -j REDIRECT --to-ports 8123
iptables -t nat -A PROXY -p tcp -j REDIRECT --to-ports 8124

# forward only DNS UDP to resolve it over dns2socks

iptables -t nat -A PROXY -p udp --dport 53 -j DNAT --to-destination 127.0.0.1
trap "iptables -t nat -D OUTPUT -j PROXY; iptables -t nat -F PROXY; iptables -t nat -X PROXY" EXIT

# run socksifier

#chmod +x redsocksv
#
dns2socks 127.0.0.1:1080 1.1.1.1:53  > /dev/null & sleep 5 &./redsocksv -c redsocks.conf
